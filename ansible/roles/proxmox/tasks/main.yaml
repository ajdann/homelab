---
# This task runs on the Ansible controller (your local machine)
- name: Install proxmoxer library locally
  ansible.builtin.pip:
    name: proxmoxer
    state: present
  delegate_to: localhost

- name: Destroy k3s-master VM to ensure a clean slate
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ k3s_nodes.master.vmid }}"
    state: absent
  delegate_to: localhost
  ignore_errors: true

- name: Destroy old template to ensure a clean slate
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ vmid }}"
    state: absent
  delegate_to: localhost
  ignore_errors: true

# The following tasks run ON THE PROXMOX SERVER itself
# They use shell commands that only exist on the server
- name: Ensure qcow directory exists
  ansible.builtin.file:
    path: /var/lib/vz/template/qcow
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Download Debian 12 cloud image
  ansible.builtin.get_url:
    url: "{{ cloud_image_url }}"
    dest: "{{ cloud_image_path }}"
    mode: '0644'
  register: download_status
  until: download_status is succeeded
  retries: 5
  delay: 10

- name: Create Debian 12 VM shell for template
  ansible.builtin.command: >
    qm create {{ vmid }} --name {{ vm_name }}
    --memory 2048 --cores 2
    --net0 virtio,bridge={{ net_bridge }}
    --serial0 socket --vga serial0
    --scsihw virtio-scsi-pci
  args:
    creates: "/etc/pve/qemu-server/{{ vmid }}.conf"

- name: Import Debian 12 disk to template VM
  ansible.builtin.command: >
    qm importdisk {{ vmid }} {{ cloud_image_path }} {{ disk_storage }}

- name: Configure template VM settings
  ansible.builtin.shell: |
    qm set {{ vmid }} --scsi0 {{ disk_storage }}:vm-{{ vmid }}-disk-0
    qm set {{ vmid }} --ide2 {{ disk_storage }}:cloudinit
    qm set {{ vmid }} --boot c --bootdisk scsi0
    qm set {{ vmid }} --ciuser {{ cloud_user }}
    qm set {{ vmid }} --sshkeys "{{ vm_ssh_pub_key }}"
    qm set {{ vmid }} --ipconfig0 ip=dhcp

- name: Convert VM to template
  ansible.builtin.command: qm template {{ vmid }}
