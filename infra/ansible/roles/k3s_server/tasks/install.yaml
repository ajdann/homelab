---
# K3s Installation Tasks

- name: Download K3s install script
  get_url:
    url: "{{ k3s_install_url }}"
    dest: "{{ k3s_install_script_path }}"
    mode: '0755'
  register: k3s_download_result
  failed_when: k3s_download_result.failed

- name: Generate K3s cluster token
  run_once: true
  shell: "openssl rand -hex {{ k3s_cluster_token_length }}"
  register: k3s_cluster_token_raw
  delegate_to: localhost

- name: Store K3s cluster token
  run_once: true
  set_fact:
    k3s_cluster_token: "{{ k3s_cluster_token_raw.stdout }}"

- name: Build TLS SAN list
  set_fact:
    k3s_tls_san_list: "{{ kubernetes_tls_sans | default(k3s_default_tls_san) }}"

- name: Run K3s install script (first master)
  when: inventory_hostname == groups['k3s_masters'][0]
  command: >
    sh {{ k3s_install_script_path }}
    --cluster-init 
    --token {{ k3s_cluster_token }} 
    --tls-san {{ k3s_tls_san_list }}
    {% for service in k3s_disable_services %}
    --disable {{ service }}
    {% endfor %}
  args:
    creates: /usr/local/bin/k3s
  register: k3s_first_master_install
  failed_when: k3s_first_master_install.rc != 0

- name: Run K3s install script (other masters)
  when: inventory_hostname != groups['k3s_masters'][0]
  command: >
    sh {{ k3s_install_script_path }}
    --server https://{{ kubernetes_vip }}:6443 
    --token {{ k3s_cluster_token }} 
    --tls-san {{ k3s_tls_san_list }}
    {% for service in k3s_disable_services %}
    --disable {{ service }}
    {% endfor %}
  args:
    creates: /usr/local/bin/k3s
  register: k3s_other_masters_install
  failed_when: k3s_other_masters_install.rc != 0
