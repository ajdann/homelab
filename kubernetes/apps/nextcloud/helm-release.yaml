---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      chart: nextcloud
      version: '7.0.0'
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: nextcloud
  values: 
    ingress:
      enabled: true
      className: "tailscale"
      annotations:
        tailscale.com/tags: tag:k8s-operator
        gethomepage.dev/enabled: 'true'
        gethomepage.dev/name: 'Nextcloud'
        gethomepage.dev/description: 'File storage'
        gethomepage.dev/group: 'Homelab Services'
        gethomepage.dev/icon: 'nextcloud.png'
        gethomepage.dev/href: 'https://nextcloud.${DOMAIN}'
        # For loadbalance over multiple Pods, it is useful to configure sticky session
        # nginx.ingress.kubernetes.io/affinity: cookie
        # traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
        # haproxy-ingress.github.io/affinity: cookie
      hosts:
      - host: nextcloud
        paths:
        - path: /
          pathType: ImplementationSpecific
      tls: 
        - hosts:
          - nextcloud
    nextcloud:
      host: 'nextcloud'
      trustedDomains: 
        - 'nextcloud.${DOMAIN}'
        - 'nextcloud'
      existingSecret:
        enabled: true
        secretName: nextcloud-admin-credentials
        usernameKey: username
        passwordKey: password
    extraEnv:
      - name: AUTHENTIK_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nextcloud-authentik-oidc
            key: client_id
      - name: AUTHENTIK_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nextcloud-authentik-oidc
            key: client_secret
    lifecycle:
      postStartCommand:
        - su
        - -s
        - /bin/sh
        - www-data
        - -c
        - |
          echo "Waiting for Nextcloud to become ready..."
          until php occ status >/dev/null 2>&1; do
            sleep 5
          done

          echo "Installing OpenID Connect user backend"
          php occ app:install user_oidc
          php occ app:enable user_oidc

          CLIENT_ID="${AUTHENTIK_CLIENT_ID}"
          CLIENT_SECRET="${AUTHENTIK_CLIENT_SECRET}"

          if ! php occ config:list | grep -q authentik; then
            php occ user_oidc:provider authentik \
              --clientid "$CLIENT_ID" \
              --clientsecret "$CLIENT_SECRET" \
              --discoveryuri "https://authentik-server.authentik.svc.cluster.local/application/o/nextcloud/.well-known/openid-configuration" \
              --scope "openid email profile"
          else
            echo "OIDC provider 'authentik' already exists, skipping."
          fi